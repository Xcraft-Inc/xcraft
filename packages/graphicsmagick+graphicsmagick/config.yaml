subpackage:
  - runtime*
name: graphicsmagick+graphicsmagick
version: 1.3.35
$version: 1.3.35
distribution: toolchain/
maintainer:
  name: Mathieu Schroeter
  email: schroeter@epsitec.ch
architecture:
  - source
description:
  brief: Swiss army knife of image processing.
  long: 'GraphicsMagick provides a set of commandline tools and programming APIs for manipulating, editing, and converting raster and vector images.'
dependency:
  install:
    adler+zlib-dev:
      - version: ''
        architecture: []
    seward+bzip2:
      - version: ''
        architecture: []
    libpng+libpng:
      - version: ''
        architecture: []
  build:
    xcraft+base-build:
      - version: ''
        architecture: []
  make:
    xcraft+base-make:
      - version: ''
        architecture: []
bump: []
data:
  get:
    uri: 'https://download.sourceforge.net/graphicsmagick/graphicsmagick/<THIS.$VERSION>/GraphicsMagick-<THIS.$VERSION>.tar.xz'
    mirrors: []
    ref: ''
    $ref: ''
    out: ''
    externals: true
    prepare: ''
    $hash: 188a8d6108fea87a0208723e8d206ec1d4d7299022be8ce5d0a9720509250250.tar.xz
  type: src
  configure: |-
    !cd <THIS.DATA.RULES.LOCATION> ;
    ./configure --prefix=<PEON.PREFIXDIR>
                --enable-static
                --disable-shared
                --without-perl
                --with-bzlib
                --with-zlib
                --without-zstd
                --without-dps
                --without-jbig
                --without-webp
                --without-jpeg
                --without-jp2
                --without-lcms2
                --without-lzma
                --with-png
                --without-tiff
                --without-trio
                --without-ttf
                --without-wmf
                --without-xml
                --without-magick-plus-plus
                --without-x
  rules:
    type: make
    location: data/GraphicsMagick-<THIS.$VERSION>/
    args:
      postinst: ''
      prerm: ''
      makeall: '-j<PEON.CPUS.COUNT>'
      maketest: ''
      makeinstall: install
    test: none
    env: {}
  deploy: ''
  env:
    path: []
    other: {}
  embedded: true
  runtime:
    configure: ''
