subpackage:
  - runtime*
name: llvm+llvm
version: 16.0.6
$version: 16.0.6
distribution: toolchain/
maintainer:
  name: Mathieu Schroeter
  email: schroeter@epsitec.ch
architecture:
  - source
description:
  brief: LLVM
  long: ''
dependency:
  build:
    xcraft+peon:
      - version: ''
        architecture: []
    llvm+cmake:
      - version: '= 16.0.6'
        architecture: []
    llvm+third-party:
      - version: '= 16.0.6'
        architecture: []
    llvm+clang:
      - version: '= 16.0.6'
        architecture: []
    llvm+polly:
      - version: '= 16.0.6'
        architecture: []
    llvm+libcxx:
      - version: '= 16.0.6'
        architecture: []
    llvm+libcxxabi:
      - version: '= 16.0.6'
        architecture: []
    samba+ccache-gcc:
      - version: ''
        architecture:
          - linux-i386
          - linux-amd64
          - linux-aarch64
    samba+ccache-clang:
      - version: ''
        architecture:
          - darwin-i386
          - darwin-amd64
          - darwin-aarch64
  make:
    lzmautils+xz:
      - version: ''
        architecture: []
bump: []
data:
  get:
    uri: 'https://github.com/llvm/llvm-project/releases/download/llvmorg-<THIS.$VERSION>/llvm-<THIS.$VERSION>.src.tar.xz'
    mirrors: []
    ref: ''
    out: ''
    externals: true
    prepare: ''
    $hash: e91db44d1b3bb1c33fcea9a7d1f2423b883eaa9163d3d56ca2aa6d2f0711bc29.tar.xz
  type: src
  configure: |-
    !mkdir -p "<PEON.PREFIXDIR>/bin"
      && ln -s clang "<PEON.PREFIXDIR>/bin/gcc"
      && ln -s clang "<PEON.PREFIXDIR>/bin/cc"
      && ln -s clang++ "<PEON.PREFIXDIR>/bin/g++"
      && ln -s clang++ "<PEON.PREFIXDIR>/bin/c++"
      && cd <THIS.DATA.RULES.LOCATION>
      && ln -sf <PEON.ROOTDIR>/usr/share/llvm/cmake/cache/data/cmake-<THIS.$VERSION>.src ../cmake
      && ln -sf <PEON.ROOTDIR>/usr/share/llvm/third-party/cache/data/third-party-<THIS.$VERSION>.src ../third-party
      && ln -sf <PEON.ROOTDIR>/usr/share/llvm/clang/cache/data/clang-<THIS.$VERSION>.src tools/clang
      && ln -sf <PEON.ROOTDIR>/usr/share/llvm/polly/cache/data/polly-<THIS.$VERSION>.src tools/polly
      && cp -a <PEON.ROOTDIR>/usr/share/llvm/libcxx/cache/data/libcxx-<THIS.$VERSION>.src projects/libcxx
      && cp -a <PEON.ROOTDIR>/usr/share/llvm/libcxxabi/cache/data/libcxxabi-<THIS.$VERSION>.src projects/libcxxabi
      && mkdir -p BUILD
      && cd BUILD
      && cmake -G "Unix Makefiles"
               -DCMAKE_INSTALL_PREFIX=<PEON.PREFIXDIR>
               -DLLVM_CCACHE_BUILD=ON
               -DCMAKE_BUILD_TYPE=Release ..
  rules:
    type: make
    location: data/llvm-<THIS.$VERSION>.src/
    args:
      postinst: ''
      prerm: ''
      makeall: '-C BUILD -j<PEON.CPUS.COUNT>'
      maketest: ''
      makeinstall: '-C BUILD install'
    test: none
    env: {}
  deploy: ''
  env:
    path: []
    other:
      CFLAGS: '-O2 -g0 -fPIC -fcolor-diagnostics -I<OS.PROD.ROOTDIR>/usr/include -Wl,-rpath,<OS.PROD.ROOTDIR>/usr/lib -Qunused-arguments'
      CXXFLAGS: '-O2 -g0 -fPIC -fcolor-diagnostics -I<OS.PROD.ROOTDIR>/usr/include -Wl,-rpath,<OS.PROD.ROOTDIR>/usr/lib -Qunused-arguments -stdlib=libc++'
      LDFLAGS: '-L<OS.PROD.ROOTDIR>/usr/lib -stdlib=libc++'
      CPPFLAGS: '-I<OS.PROD.ROOTDIR>/usr/include'
      CCACHE_PATH: <OS.ENV.PATH>
  embedded: true
  runtime:
    configure: ''
